plugins {
    id 'java-library'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.8.5'
    id 'com.jfrog.artifactory' version '4.18.3'
    id "org.sonarqube" version "3.0"
    id 'jacoco'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
def versionName = '1.5.5-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.apache.logging.log4j:log4j-api:2.14.0'
    implementation 'io.netty:netty-all:4.1.57.Final'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'

    testImplementation 'org.apache.logging.log4j:log4j-core:2.14.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.7.0'
    testImplementation 'org.awaitility:awaitility:4.0.3'
    testImplementation('net.jradius:jradius-core:1.1.5') {
        transitive = false // for reference implementation of hashing utilities
    }
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "globalreachtech_tinyradius-netty"
        property "sonar.organization", "globalreachtech"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.coverage.jacoco.xmlReportPaths", file("./build/reports/jacoco/test/jacocoTestReport.xml")
    }
}

test {
    testLogging.showStandardStreams = true
    testLogging.exceptionFormat = 'full'
    useJUnitPlatform()
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['mavenJava']
    pkg {
        repo = 'grt-maven'
        name = 'tinyradius-netty'
        userOrg = 'globalreachtech'
        licenses = ['LGPL-2.1']
        vcsUrl = 'https://github.com/globalreachtech/tinyradius-netty.git'
        version {
            name = versionName
            released = new Date()
        }
    }
}

artifactory {
    contextUrl = 'http://oss.jfrog.org'
    publish {
        repository {
            repoKey = 'oss-snapshot-local'
            username = System.getenv('BINTRAY_USER')
            password = System.getenv('BINTRAY_KEY')
        }
        defaults {
            publications('mavenJava')
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            afterEvaluate {
                artifact sourcesJar
                artifact javadocJar
            }
            groupId 'com.globalreachtech'
            artifactId 'tinyradius-netty'
            version versionName
            pom {
                name = 'tinyradius-netty'
                description = 'TinyRadius-Netty is a small Java Radius library'
                url = 'https://github.com/globalreachtech/tinyradius-netty'
                licenses {
                    license {
                        name = 'GNU Lesser General Public License, version 2.1'
                        url = 'https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html'
                    }
                }
                developers {
                    developer {
                        id = "horaceli"
                        url = "https://github.com/horaceli"
                    }
                    developer {
                        id = 'globalreachtech'
                        organizationUrl = 'https://www.globalreachtech.com/'
                    }
                }
                scm {
                    url = 'https://github.com/globalreachtech/tinyradius-netty'
                }
            }
        }
    }
}

